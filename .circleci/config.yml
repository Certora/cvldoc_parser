version: 2.1
orbs:
  rust: circleci/rust@1.6.0
  win: circleci/windows@4.1.1
jobs:
  build-macos-wheels:
    macos:
      xcode: 13.4.1
    steps:
      - checkout
      - rust/install
      - run:
          name: "Update pip"
          command: python3 -m pip install --upgrade pip
      - run:    
          name: "Build Project"
          command: |
            pip3 install maturin
            cd src/python_wrapper
            rustup target install x86_64-apple-darwin aarch64-apple-darwin
            maturin build --target=aarch64-apple-darwin --universal2
      - store_artifacts:
          path: ./src/python_wrapper/target/wheels
      - persist_to_workspace:
          root: ./src/python_wrapper/target
          paths:
            - wheels/*

  build-linux-wheels:
    docker:
      - image: quay.io/pypa/manylinux_2_28_x86_64:latest
    steps:
      - checkout
      - rust/install
      - run:
          name: "Install Maturin and Build Wheels"
          command: |
            cd src/python_wrapper
            PYBIN_DIR="/opt/python/cp37-cp37m/bin"
            "${PYBIN_DIR}/pip" install maturin
            "${PYBIN_DIR}/maturin" build --bindings=pyo3
      - store_artifacts:
          path: ./src/python_wrapper/target/wheels/
      - persist_to_workspace:
          root: ./src/python_wrapper/target
          paths:
            - wheels/*

  build-windows-wheels:
    executor: win/default
    steps:
      - checkout
      - run:
          name: Install Pip Dependecies
          command: |
            python -m pip install --upgrade pip
            pip install maturin 
          shell: bash.exe
      - run:
          name: Install Rust
          command: |
            curl --proto '=https' --tlsv1.2 https://sh.rustup.rs > rustup.sh && sh rustup.sh -y
          shell: bash.exe
      - run:
          name: Fix Cargo Config
          command: |
            echo "[net]" >> ~/.cargo/config
            echo "git-fetch-with-cli = true" >> ~/.cargo/config
          shell: bash.exe
      - run:
          name: Build Wheels
          command: |
            export PATH=${HOME}/.cargo/bin:$PATH
            cd src/python_wrapper
            rustup target install x86_64-pc-windows-msvc x86_64-pc-windows-gnu i686-pc-windows-msvc i686-pc-windows-gnu
            maturin build --target=x86_64-pc-windows-msvc --bindings=pyo3
          shell: bash.exe
      - store_artifacts:
          path: ./src/python_wrapper/target/wheels
      - persist_to_workspace:
          root: ./src/python_wrapper/target
          paths:
            - wheels/*

  publish-to-testpypi:
    docker:
      - image: cimg/python:3.10.7
    steps:
      - attach_workspace:
         at: .
      - run:
          name: "Upload wheels to Test PyPI"
          command: |
            pip install --user twine
            for wheel in wheels/*.whl; do
              echo "Uploading $wheel...";
              python -m twine upload --skip-existing --verbose --repository testpypi -u ${TESTPYPI_USER} -p ${TESTPYPI_PASSWORD} "${wheel}"
            done

workflows:
  build-and-integration-test:
    jobs:
      - build-linux-wheels
      - build-macos-wheels
      - build-windows-wheels
      - publish-to-testpypi:
          requires:
            - build-linux-wheels
            - build-macos-wheels
            - build-windows-wheels