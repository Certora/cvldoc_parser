version: 2.1
orbs:
  rust: circleci/rust@1.6.0
  win: circleci/windows@4.1.1
jobs:
  build-macos-wheels:
    macos:
      xcode: 13.4.1
    steps:
      - checkout
      - rust/install
      - run:
          name: "Build Project"
          command: |
            pip3 install maturin cffi
            rustup target install x86_64-apple-darwin aarch64-apple-darwin
            echo "[lib]" >> Cargo.toml
            echo 'crate-type = ["cdylib"]' >> Cargo.toml
            maturin build --target=aarch64-apple-darwin --universal2 --bindings=cffi
      - store_artifacts:
          path: /Users/distiller/project/target/wheels
      - run:
          name: "Upload to Test PyPI"
          command: |
            pip3 install -- user twine
            python3 -m twine upload --skip-existing --verbose --repository testpypi -u ${TESTPYPI_USER} -p ${TESTPYPI_PASSWORD} /Users/distiller/project/target/wheels/*

  build-linux-wheels:
    docker:
      - image: quay.io/pypa/manylinux_2_28_x86_64:latest
    steps:
      - checkout
      - rust/install
      - run:
          name: "Install Maturin and Build Wheels"
          command: |
            for PYBIN in /opt/python/cp3{7,8,9,10,11}*/bin; do
              # "${PYBIN}/pip" install maturin
              "${PYBIN}/maturin" build -m src/python_wrapper/Cargo.toml -i "${PYBIN}/python"
              "${PYBIN}/maturin" build -m src/python_wrapper/Cargo.toml -i "${PYBIN}/python --target x86_64-pc-windows-gnu"
            done
      - store_artifacts:
          path: /root/project/src/python_wrapper/target/wheels/
      - run:
            name: "Upload to Test PyPI"
            command: |
              /opt/python/cp310-cp310/bin/pip install --user twine
              /opt/python/cp310-cp310/bin/python -m twine upload --skip-existing --verbose --repository testpypi -u ${TESTPYPI_USER} -p ${TESTPYPI_PASSWORD} /root/project/src/python_wrapper/target/wheels/*

  build-windows-wheels:
    executor: win/default
    steps:
      - checkout
      - run:
          command: |
            curl --proto '=https' --tlsv1.2 https://sh.rustup.rs > rustup.sh && sh rustup.sh -y
            export PATH="$HOME/.cargo/bin:$PATH"
            rustup target install x86_64-pc-windows-msvc x86_64-pc-windows-gnu i686-pc-windows-msvc i686-pc-windows-gnu
            maturin build --target=aarch64-apple-darwin
          shell: bash.exe

      
workflows:
  build-and-publish:
    jobs:
     # - build-linux-wheels
     # - build-macos-wheels
      - build-windows-wheels